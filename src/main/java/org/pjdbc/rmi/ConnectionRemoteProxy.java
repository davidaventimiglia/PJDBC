package org.pjdbc.rmi;

import java.rmi.*;
import java.sql.*;
import java.util.*;
import java.util.logging.*;
import java.util.concurrent.*;

public interface ConnectionRemoteProxy extends WrapperRemoteProxy, Remote {
    Array createArrayOf (String typeName, Object[] elements) throws RemoteException;
    Blob createBlob () throws RemoteException;
    Clob createClob () throws RemoteException;
    DatabaseMetaData getMetaData () throws RemoteException;
    Map<String,Class<?>> getTypeMap () throws RemoteException;
    NClob createNClob () throws RemoteException;
    Properties getClientInfo () throws RemoteException;
    SQLWarning getWarnings () throws RemoteException;
    SQLXML createSQLXML () throws RemoteException;
    Savepoint setSavepoint () throws RemoteException;
    Savepoint setSavepoint (String name) throws RemoteException;
    String getCatalog () throws RemoteException;
    String getClientInfo (String name) throws RemoteException;
    String getSchema () throws RemoteException;
    String nativeSQL (String sql) throws RemoteException;
    Struct createStruct (String typeName, Object[] attributes) throws RemoteException;
    boolean getAutoCommit () throws RemoteException;
    boolean isClosed () throws RemoteException;
    boolean isReadOnly () throws RemoteException;
    boolean isValid (int timeout) throws RemoteException;
    int getHoldability () throws RemoteException;
    int getNetworkTimeout () throws RemoteException;
    int getTransactionIsolation () throws RemoteException;
    void abort (Executor executor) throws RemoteException;
    void clearWarnings () throws RemoteException;
    void close () throws RemoteException;
    void commit () throws RemoteException;
    void releaseSavepoint (Savepoint savepoint) throws RemoteException;
    void rollback () throws RemoteException;
    void rollback (Savepoint savepoint) throws RemoteException;
    void setAutoCommit (boolean autoCommit) throws RemoteException;
    void setCatalog (String catalog) throws RemoteException;
    void setClientInfo (Properties properties) throws SQLClientInfoException;
    void setClientInfo (String name, String value) throws SQLClientInfoException;
    void setHoldability (int holdability) throws RemoteException;
    void setNetworkTimeout (Executor executor, int milliseconds) throws RemoteException;
    void setReadOnly (boolean readOnly) throws RemoteException;
    void setSchema (String schema) throws RemoteException;
    void setTransactionIsolation (int level) throws RemoteException;
    void setTypeMap (Map<String,Class<?>> map) throws RemoteException;
    boolean isWrapperFor (Class<?> iface);
    <T> T unwrap(Class<T> iface) throws RemoteException;
    PreparedStatement prepareStatement (String sql) throws RemoteException;
    PreparedStatement prepareStatement (String sql, String[] columnNames) throws RemoteException;
    PreparedStatement prepareStatement (String sql, int autoGeneratedKeys) throws RemoteException;
    PreparedStatement prepareStatement (String sql, int resultSetType, int resultSetConcurrency) throws RemoteException;
    PreparedStatement prepareStatement (String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws RemoteException;
    PreparedStatement prepareStatement (String sql, int[] columnIndexes) throws RemoteException;
    CallableStatement prepareCall (String sql) throws RemoteException;
    CallableStatement prepareCall (String sql, int resultSetType, int resultSetConcurrency) throws RemoteException;
    CallableStatement prepareCall (String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws RemoteException;
    Statement createStatement () throws RemoteException;
    Statement createStatement (int resultSetType, int resultSetConcurrency) throws RemoteException;
    Statement createStatement (int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws RemoteException;}
